# Generated by Django 4.2.9 on 2024-10-15 09:58

import api.models
import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Salgy')),
            ],
        ),
        migrations.CreateModel(
            name='CarouselImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Ady')),
                ('img', models.ImageField(null=True, upload_to='carousel', verbose_name='Surat')),
            ],
            options={
                'verbose_name': 'Banner surat',
                'verbose_name_plural': 'Banner suratlar',
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Habar kategoriýa')),
            ],
            options={
                'verbose_name': 'Habar kategoriýa',
                'verbose_name_plural': 'Habar kategoriýalar',
            },
        ),
        migrations.CreateModel(
            name='TopProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Ady')),
                ('category', models.CharField(max_length=100, null=True, verbose_name='Kategoriýa')),
                ('author', models.CharField(max_length=255, null=True, verbose_name='Awtor')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Bahasy')),
                ('text', ckeditor.fields.RichTextField(null=True)),
                ('phone', models.IntegerField(null=True, verbose_name='Telefon belgi')),
                ('img', models.ImageField(null=True, upload_to=api.models.image_add_top, verbose_name='Surat')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Döredilen wagty')),
                ('checked', models.BooleanField(default=False, verbose_name='Barlandy')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.address', verbose_name='Salgy')),
            ],
            options={
                'verbose_name': 'Saýlanan',
                'verbose_name_plural': 'Saýlananlar',
                'ordering': ['-created', 'checked'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, null=True, verbose_name='Ady')),
                ('author', models.CharField(max_length=150, null=True, verbose_name='Awtor')),
                ('img', models.ImageField(null=True, upload_to=api.models.image_add_habar, verbose_name='Surat')),
                ('text', ckeditor.fields.RichTextField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Döredilen wagty')),
                ('checked', models.BooleanField(default=False, verbose_name='Barlandy')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.newscategory', verbose_name='Kategoriýa')),
            ],
            options={
                'verbose_name': 'Habar',
                'verbose_name_plural': 'Habarlar',
                'ordering': ['-created', 'checked'],
            },
        ),
        migrations.CreateModel(
            name='ImageTop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(null=True, upload_to=api.models.images_add_top, verbose_name='Surat')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Döredilen wagty')),
                ('top', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.topproducts', verbose_name='Haryt')),
            ],
            options={
                'verbose_name': 'Saýlanan surat',
                'verbose_name_plural': 'Saýlanan suratlar',
            },
        ),
        migrations.CreateModel(
            name='UserProd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('author', models.CharField(max_length=255, null=True)),
                ('checked', models.BooleanField(default=False, verbose_name='Barlandy')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Ulanyjy',
                'verbose_name_plural': 'Ulanyjylar',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
